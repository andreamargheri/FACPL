/*
 * generated by Xtext
 */
grammar InternalFacpl2;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package it.unifi.xtext.facpl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package it.unifi.xtext.facpl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import it.unifi.xtext.facpl.services.Facpl2GrammarAccess;

}

@parser::members {
 
 	private Facpl2GrammarAccess grammarAccess;
 	
    public void setGrammarAccess(Facpl2GrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleFacpl
entryRuleFacpl 
:
{ before(grammarAccess.getFacplRule()); }
	 ruleFacpl
{ after(grammarAccess.getFacplRule()); } 
	 EOF 
;

// Rule Facpl
ruleFacpl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFacplAccess().getUnorderedGroup()); }
(rule__Facpl__UnorderedGroup)
{ after(grammarAccess.getFacplAccess().getUnorderedGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMainFacpl
entryRuleMainFacpl 
:
{ before(grammarAccess.getMainFacplRule()); }
	 ruleMainFacpl
{ after(grammarAccess.getMainFacplRule()); } 
	 EOF 
;

// Rule MainFacpl
ruleMainFacpl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMainFacplAccess().getGroup()); }
(rule__MainFacpl__Group__0)
{ after(grammarAccess.getMainFacplAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionDeclaration
entryRuleFunctionDeclaration 
:
{ before(grammarAccess.getFunctionDeclarationRule()); }
	 ruleFunctionDeclaration
{ after(grammarAccess.getFunctionDeclarationRule()); } 
	 EOF 
;

// Rule FunctionDeclaration
ruleFunctionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
(rule__FunctionDeclaration__Group__0)
{ after(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePAF
entryRulePAF 
:
{ before(grammarAccess.getPAFRule()); }
	 rulePAF
{ after(grammarAccess.getPAFRule()); } 
	 EOF 
;

// Rule PAF
rulePAF
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPAFAccess().getGroup()); }
(rule__PAF__Group__0)
{ after(grammarAccess.getPAFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequest
entryRuleRequest 
:
{ before(grammarAccess.getRequestRule()); }
	 ruleRequest
{ after(grammarAccess.getRequestRule()); } 
	 EOF 
;

// Rule Request
ruleRequest
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequestAccess().getGroup()); }
(rule__Request__Group__0)
{ after(grammarAccess.getRequestAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeReq
entryRuleAttributeReq 
:
{ before(grammarAccess.getAttributeReqRule()); }
	 ruleAttributeReq
{ after(grammarAccess.getAttributeReqRule()); } 
	 EOF 
;

// Rule AttributeReq
ruleAttributeReq
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeReqAccess().getGroup()); }
(rule__AttributeReq__Group__0)
{ after(grammarAccess.getAttributeReqAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeName
entryRuleAttributeName 
:
{ before(grammarAccess.getAttributeNameRule()); }
	 ruleAttributeName
{ after(grammarAccess.getAttributeNameRule()); } 
	 EOF 
;

// Rule AttributeName
ruleAttributeName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeNameAccess().getGroup()); }
(rule__AttributeName__Group__0)
{ after(grammarAccess.getAttributeNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTRING_O
entryRuleSTRING_O 
:
{ before(grammarAccess.getSTRING_ORule()); }
	 ruleSTRING_O
{ after(grammarAccess.getSTRING_ORule()); } 
	 EOF 
;

// Rule STRING_O
ruleSTRING_O
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSTRING_OAccess().getGroup()); }
(rule__STRING_O__Group__0)
{ after(grammarAccess.getSTRING_OAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePDP
entryRulePDP 
:
{ before(grammarAccess.getPDPRule()); }
	 rulePDP
{ after(grammarAccess.getPDPRule()); } 
	 EOF 
;

// Rule PDP
rulePDP
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPDPAccess().getGroup()); }
(rule__PDP__Group__0)
{ after(grammarAccess.getPDPAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFacplPolicy
entryRuleFacplPolicy 
:
{ before(grammarAccess.getFacplPolicyRule()); }
	 ruleFacplPolicy
{ after(grammarAccess.getFacplPolicyRule()); } 
	 EOF 
;

// Rule FacplPolicy
ruleFacplPolicy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFacplPolicyAccess().getAlternatives()); }
(rule__FacplPolicy__Alternatives)
{ after(grammarAccess.getFacplPolicyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractPolicyIncl
entryRuleAbstractPolicyIncl 
:
{ before(grammarAccess.getAbstractPolicyInclRule()); }
	 ruleAbstractPolicyIncl
{ after(grammarAccess.getAbstractPolicyInclRule()); } 
	 EOF 
;

// Rule AbstractPolicyIncl
ruleAbstractPolicyIncl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractPolicyInclAccess().getAlternatives()); }
(rule__AbstractPolicyIncl__Alternatives)
{ after(grammarAccess.getAbstractPolicyInclAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePolicySet
entryRulePolicySet 
:
{ before(grammarAccess.getPolicySetRule()); }
	 rulePolicySet
{ after(grammarAccess.getPolicySetRule()); } 
	 EOF 
;

// Rule PolicySet
rulePolicySet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPolicySetAccess().getGroup()); }
(rule__PolicySet__Group__0)
{ after(grammarAccess.getPolicySetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlg
entryRuleAlg 
:
{ before(grammarAccess.getAlgRule()); }
	 ruleAlg
{ after(grammarAccess.getAlgRule()); } 
	 EOF 
;

// Rule Alg
ruleAlg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlgAccess().getGroup()); }
(rule__Alg__Group__0)
{ after(grammarAccess.getAlgAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRule
entryRuleRule 
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleAccess().getGroup()); }
(rule__Rule__Group__0)
{ after(grammarAccess.getRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObligation
entryRuleObligation 
:
{ before(grammarAccess.getObligationRule()); }
	 ruleObligation
{ after(grammarAccess.getObligationRule()); } 
	 EOF 
;

// Rule Obligation
ruleObligation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObligationAccess().getGroup()); }
(rule__Obligation__Group__0)
{ after(grammarAccess.getObligationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAndExpressionParserRuleCall()); }
	ruleAndExpression
{ after(grammarAccess.getExpressionAccess().getAndExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpression
entryRuleOrExpression 
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
(rule__OrExpression__Group__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBasicExpression
entryRuleBasicExpression 
:
{ before(grammarAccess.getBasicExpressionRule()); }
	 ruleBasicExpression
{ after(grammarAccess.getBasicExpressionRule()); } 
	 EOF 
;

// Rule BasicExpression
ruleBasicExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBasicExpressionAccess().getAlternatives()); }
(rule__BasicExpression__Alternatives)
{ after(grammarAccess.getBasicExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotExpression
entryRuleNotExpression 
:
{ before(grammarAccess.getNotExpressionRule()); }
	 ruleNotExpression
{ after(grammarAccess.getNotExpressionRule()); } 
	 EOF 
;

// Rule NotExpression
ruleNotExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotExpressionAccess().getGroup()); }
(rule__NotExpression__Group__0)
{ after(grammarAccess.getNotExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaredFunction
entryRuleDeclaredFunction 
:
{ before(grammarAccess.getDeclaredFunctionRule()); }
	 ruleDeclaredFunction
{ after(grammarAccess.getDeclaredFunctionRule()); } 
	 EOF 
;

// Rule DeclaredFunction
ruleDeclaredFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclaredFunctionAccess().getGroup()); }
(rule__DeclaredFunction__Group__0)
{ after(grammarAccess.getDeclaredFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiterals
entryRuleLiterals 
:
{ before(grammarAccess.getLiteralsRule()); }
	 ruleLiterals
{ after(grammarAccess.getLiteralsRule()); } 
	 EOF 
;

// Rule Literals
ruleLiterals
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralsAccess().getAlternatives()); }
(rule__Literals__Alternatives)
{ after(grammarAccess.getLiteralsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSet
entryRuleSet 
:
{ before(grammarAccess.getSetRule()); }
	 ruleSet
{ after(grammarAccess.getSetRule()); } 
	 EOF 
;

// Rule Set
ruleSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSetAccess().getGroup()); }
(rule__Set__Group__0)
{ after(grammarAccess.getSetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
(rule__StringLiteral__ValueAssignment)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
(rule__BooleanLiteral__ValueAssignment)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntLiteral
entryRuleIntLiteral 
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
(rule__IntLiteral__ValueAssignment)
{ after(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoubleLiteral
entryRuleDoubleLiteral 
:
{ before(grammarAccess.getDoubleLiteralRule()); }
	 ruleDoubleLiteral
{ after(grammarAccess.getDoubleLiteralRule()); } 
	 EOF 
;

// Rule DoubleLiteral
ruleDoubleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleLiteralAccess().getValueAssignment()); }
(rule__DoubleLiteral__ValueAssignment)
{ after(grammarAccess.getDoubleLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDateLiteral
entryRuleDateLiteral 
:
{ before(grammarAccess.getDateLiteralRule()); }
	 ruleDateLiteral
{ after(grammarAccess.getDateLiteralRule()); } 
	 EOF 
;

// Rule DateLiteral
ruleDateLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateLiteralAccess().getValueAssignment()); }
(rule__DateLiteral__ValueAssignment)
{ after(grammarAccess.getDateLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeLiteral
entryRuleTimeLiteral 
:
{ before(grammarAccess.getTimeLiteralRule()); }
	 ruleTimeLiteral
{ after(grammarAccess.getTimeLiteralRule()); } 
	 EOF 
;

// Rule TimeLiteral
ruleTimeLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeLiteralAccess().getValueAssignment()); }
(rule__TimeLiteral__ValueAssignment)
{ after(grammarAccess.getTimeLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule TypeLiteral
ruleTypeLiteral
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeLiteralAccess().getAlternatives()); }
(rule__TypeLiteral__Alternatives)
{ after(grammarAccess.getTypeLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PEPAlg
rulePEPAlg
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPEPAlgAccess().getAlternatives()); }
(rule__PEPAlg__Alternatives)
{ after(grammarAccess.getPEPAlgAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AlgLiteral
ruleAlgLiteral
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgLiteralAccess().getAlternatives()); }
(rule__AlgLiteral__Alternatives)
{ after(grammarAccess.getAlgLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule FulfillmentStrategy
ruleFulfillmentStrategy
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFulfillmentStrategyAccess().getAlternatives()); }
(rule__FulfillmentStrategy__Alternatives)
{ after(grammarAccess.getFulfillmentStrategyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Effect
ruleEffect
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getAlternatives()); }
(rule__Effect__Alternatives)
{ after(grammarAccess.getEffectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule funID
rulefunID
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunIDAccess().getAlternatives()); }
(rule__FunID__Alternatives)
{ after(grammarAccess.getFunIDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__STRING_O__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRING_OAccess().getColonKeyword_1_0_0()); }

	':' 

{ after(grammarAccess.getSTRING_OAccess().getColonKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getSTRING_OAccess().get_Keyword_1_0_1()); }

	'_' 

{ after(grammarAccess.getSTRING_OAccess().get_Keyword_1_0_1()); }
)

    |(
{ before(grammarAccess.getSTRING_OAccess().getHyphenMinusKeyword_1_0_2()); }

	'-' 

{ after(grammarAccess.getSTRING_OAccess().getHyphenMinusKeyword_1_0_2()); }
)

    |(
{ before(grammarAccess.getSTRING_OAccess().getFullStopKeyword_1_0_3()); }

	'.' 

{ after(grammarAccess.getSTRING_OAccess().getFullStopKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FacplPolicy__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacplPolicyAccess().getPolicySetParserRuleCall_0()); }
	rulePolicySet
{ after(grammarAccess.getFacplPolicyAccess().getPolicySetParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFacplPolicyAccess().getRuleParserRuleCall_1()); }
	ruleRule
{ after(grammarAccess.getFacplPolicyAccess().getRuleParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractPolicyIncl__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractPolicyInclAccess().getNewPolicyAssignment_0()); }
(rule__AbstractPolicyIncl__NewPolicyAssignment_0)
{ after(grammarAccess.getAbstractPolicyInclAccess().getNewPolicyAssignment_0()); }
)

    |(
{ before(grammarAccess.getAbstractPolicyInclAccess().getGroup_1()); }
(rule__AbstractPolicyIncl__Group_1__0)
{ after(grammarAccess.getAbstractPolicyInclAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__TypeOblAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObligationAccess().getTypeOblMKeyword_1_0_0()); }

	'M' 

{ after(grammarAccess.getObligationAccess().getTypeOblMKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getObligationAccess().getTypeOblOKeyword_1_0_1()); }

	'O' 

{ after(grammarAccess.getObligationAccess().getTypeOblOKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicExpressionAccess().getFunctionParserRuleCall_0()); }
	ruleFunction
{ after(grammarAccess.getBasicExpressionAccess().getFunctionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBasicExpressionAccess().getDeclaredFunctionParserRuleCall_1()); }
	ruleDeclaredFunction
{ after(grammarAccess.getBasicExpressionAccess().getDeclaredFunctionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBasicExpressionAccess().getGroup_2()); }
(rule__BasicExpression__Group_2__0)
{ after(grammarAccess.getBasicExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getBasicExpressionAccess().getNotExpressionParserRuleCall_3()); }
	ruleNotExpression
{ after(grammarAccess.getBasicExpressionAccess().getNotExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getBasicExpressionAccess().getLiteralsParserRuleCall_4()); }
	ruleLiterals
{ after(grammarAccess.getBasicExpressionAccess().getLiteralsParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literals__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralsAccess().getIntLiteralParserRuleCall_0()); }
	ruleIntLiteral
{ after(grammarAccess.getLiteralsAccess().getIntLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralsAccess().getDoubleLiteralParserRuleCall_1()); }
	ruleDoubleLiteral
{ after(grammarAccess.getLiteralsAccess().getDoubleLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralsAccess().getBooleanLiteralParserRuleCall_2()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralsAccess().getBooleanLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralsAccess().getStringLiteralParserRuleCall_3()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralsAccess().getStringLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralsAccess().getDateLiteralParserRuleCall_4()); }
	ruleDateLiteral
{ after(grammarAccess.getLiteralsAccess().getDateLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getLiteralsAccess().getTimeLiteralParserRuleCall_5()); }
	ruleTimeLiteral
{ after(grammarAccess.getLiteralsAccess().getTimeLiteralParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getLiteralsAccess().getAttributeNameParserRuleCall_6()); }
	ruleAttributeName
{ after(grammarAccess.getLiteralsAccess().getAttributeNameParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getLiteralsAccess().getSetParserRuleCall_7()); }
	ruleSet
{ after(grammarAccess.getLiteralsAccess().getSetParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeLiteralAccess().getIntEnumLiteralDeclaration_0()); }
(	'Int' 
)
{ after(grammarAccess.getTypeLiteralAccess().getIntEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTypeLiteralAccess().getDoubleEnumLiteralDeclaration_1()); }
(	'Double' 
)
{ after(grammarAccess.getTypeLiteralAccess().getDoubleEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTypeLiteralAccess().getBoolEnumLiteralDeclaration_2()); }
(	'Bool' 
)
{ after(grammarAccess.getTypeLiteralAccess().getBoolEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getTypeLiteralAccess().getStringEnumLiteralDeclaration_3()); }
(	'String' 
)
{ after(grammarAccess.getTypeLiteralAccess().getStringEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getTypeLiteralAccess().getDateTimeEnumLiteralDeclaration_4()); }
(	'DateTime' 
)
{ after(grammarAccess.getTypeLiteralAccess().getDateTimeEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getTypeLiteralAccess().getSetIntEnumLiteralDeclaration_5()); }
(	'Set<Int>' 
)
{ after(grammarAccess.getTypeLiteralAccess().getSetIntEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getTypeLiteralAccess().getSetDoubleEnumLiteralDeclaration_6()); }
(	'Set<Double>' 
)
{ after(grammarAccess.getTypeLiteralAccess().getSetDoubleEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getTypeLiteralAccess().getSetBoolEnumLiteralDeclaration_7()); }
(	'Set<Bool>' 
)
{ after(grammarAccess.getTypeLiteralAccess().getSetBoolEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getTypeLiteralAccess().getSetStringEnumLiteralDeclaration_8()); }
(	'Set<String>' 
)
{ after(grammarAccess.getTypeLiteralAccess().getSetStringEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getTypeLiteralAccess().getSetDateTimeEnumLiteralDeclaration_9()); }
(	'Set<DateTime>' 
)
{ after(grammarAccess.getTypeLiteralAccess().getSetDateTimeEnumLiteralDeclaration_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PEPAlg__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPEPAlgAccess().getBASEEnumLiteralDeclaration_0()); }
(	'base' 
)
{ after(grammarAccess.getPEPAlgAccess().getBASEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPEPAlgAccess().getDENYEnumLiteralDeclaration_1()); }
(	'deny-biased' 
)
{ after(grammarAccess.getPEPAlgAccess().getDENYEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPEPAlgAccess().getPERMITEnumLiteralDeclaration_2()); }
(	'permit-biased' 
)
{ after(grammarAccess.getPEPAlgAccess().getPERMITEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlgLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgLiteralAccess().getONLY_ONEEnumLiteralDeclaration_0()); }
(	'only-one-applicable' 
)
{ after(grammarAccess.getAlgLiteralAccess().getONLY_ONEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAlgLiteralAccess().getDENY_OVEREnumLiteralDeclaration_1()); }
(	'deny-overrides' 
)
{ after(grammarAccess.getAlgLiteralAccess().getDENY_OVEREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAlgLiteralAccess().getPERMIT_OVEREnumLiteralDeclaration_2()); }
(	'permit-overrides' 
)
{ after(grammarAccess.getAlgLiteralAccess().getPERMIT_OVEREnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getAlgLiteralAccess().getFIRSTEnumLiteralDeclaration_3()); }
(	'first-applicable' 
)
{ after(grammarAccess.getAlgLiteralAccess().getFIRSTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getAlgLiteralAccess().getDENY_UNLESSEnumLiteralDeclaration_4()); }
(	'deny-unless-permit' 
)
{ after(grammarAccess.getAlgLiteralAccess().getDENY_UNLESSEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getAlgLiteralAccess().getPERMIT_UNLESSEnumLiteralDeclaration_5()); }
(	'permit-unless-deny' 
)
{ after(grammarAccess.getAlgLiteralAccess().getPERMIT_UNLESSEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getAlgLiteralAccess().getWEAK_CONSEnumLiteralDeclaration_6()); }
(	'weak-consensus' 
)
{ after(grammarAccess.getAlgLiteralAccess().getWEAK_CONSEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getAlgLiteralAccess().getSTRONG_CONSEnumLiteralDeclaration_7()); }
(	'strong-consensus' 
)
{ after(grammarAccess.getAlgLiteralAccess().getSTRONG_CONSEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getAlgLiteralAccess().getCUSTOM_ALGEnumLiteralDeclaration_8()); }
(	'custom-algorithm' 
)
{ after(grammarAccess.getAlgLiteralAccess().getCUSTOM_ALGEnumLiteralDeclaration_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FulfillmentStrategy__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFulfillmentStrategyAccess().getGREEDYEnumLiteralDeclaration_0()); }
(	'greedy' 
)
{ after(grammarAccess.getFulfillmentStrategyAccess().getGREEDYEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFulfillmentStrategyAccess().getALLEnumLiteralDeclaration_1()); }
(	'all' 
)
{ after(grammarAccess.getFulfillmentStrategyAccess().getALLEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getPERMITEnumLiteralDeclaration_0()); }
(	'permit' 
)
{ after(grammarAccess.getEffectAccess().getPERMITEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getDENYEnumLiteralDeclaration_1()); }
(	'deny' 
)
{ after(grammarAccess.getEffectAccess().getDENYEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunID__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunIDAccess().getEQUALEnumLiteralDeclaration_0()); }
(	'equal' 
)
{ after(grammarAccess.getFunIDAccess().getEQUALEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFunIDAccess().getN_EQUALEnumLiteralDeclaration_1()); }
(	'not-equal' 
)
{ after(grammarAccess.getFunIDAccess().getN_EQUALEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFunIDAccess().getLESSEnumLiteralDeclaration_2()); }
(	'less-than' 
)
{ after(grammarAccess.getFunIDAccess().getLESSEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getFunIDAccess().getLESS_EQEnumLiteralDeclaration_3()); }
(	'less-than-or-equal' 
)
{ after(grammarAccess.getFunIDAccess().getLESS_EQEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getFunIDAccess().getGREATEREnumLiteralDeclaration_4()); }
(	'greater-than' 
)
{ after(grammarAccess.getFunIDAccess().getGREATEREnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getFunIDAccess().getGREATER_EQEnumLiteralDeclaration_5()); }
(	'greater-than-or-equal' 
)
{ after(grammarAccess.getFunIDAccess().getGREATER_EQEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getFunIDAccess().getINEnumLiteralDeclaration_6()); }
(	'in' 
)
{ after(grammarAccess.getFunIDAccess().getINEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getFunIDAccess().getADDEnumLiteralDeclaration_7()); }
(	'addition' 
)
{ after(grammarAccess.getFunIDAccess().getADDEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getFunIDAccess().getSUBTRACTEnumLiteralDeclaration_8()); }
(	'subtract' 
)
{ after(grammarAccess.getFunIDAccess().getSUBTRACTEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getFunIDAccess().getDIVIDEEnumLiteralDeclaration_9()); }
(	'divide' 
)
{ after(grammarAccess.getFunIDAccess().getDIVIDEEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getFunIDAccess().getMULTIPLYEnumLiteralDeclaration_10()); }
(	'multiply' 
)
{ after(grammarAccess.getFunIDAccess().getMULTIPLYEnumLiteralDeclaration_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MainFacpl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group__0__Impl
	rule__MainFacpl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getPASKeyword_0()); }

	'PAS' 

{ after(grammarAccess.getMainFacplAccess().getPASKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group__1__Impl
	rule__MainFacpl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getMainFacplAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group__2__Impl
	rule__MainFacpl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getExtendedIndeterminateKeyword_2()); }

	'Extended Indeterminate' 

{ after(grammarAccess.getMainFacplAccess().getExtendedIndeterminateKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group__3__Impl
	rule__MainFacpl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getMainFacplAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group__4__Impl
	rule__MainFacpl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getExtIndetAssignment_4()); }
(rule__MainFacpl__ExtIndetAssignment_4)
{ after(grammarAccess.getMainFacplAccess().getExtIndetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group__5__Impl
	rule__MainFacpl__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getMainFacplAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group__6__Impl
	rule__MainFacpl__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getGroup_6()); }
(rule__MainFacpl__Group_6__0)?
{ after(grammarAccess.getMainFacplAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group__7__Impl
	rule__MainFacpl__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getGroup_7()); }
(rule__MainFacpl__Group_7__0)
{ after(grammarAccess.getMainFacplAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group__8__Impl
	rule__MainFacpl__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getPafAssignment_8()); }
(rule__MainFacpl__PafAssignment_8)
{ after(grammarAccess.getMainFacplAccess().getPafAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getMainFacplAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__MainFacpl__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group_6__0__Impl
	rule__MainFacpl__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getJavaPackageKeyword_6_0()); }

	'Java Package' 

{ after(grammarAccess.getMainFacplAccess().getJavaPackageKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group_6__1__Impl
	rule__MainFacpl__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getColonKeyword_6_1()); }

	':' 

{ after(grammarAccess.getMainFacplAccess().getColonKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group_6__2__Impl
	rule__MainFacpl__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getGenPackageAssignment_6_2()); }
(rule__MainFacpl__GenPackageAssignment_6_2)
{ after(grammarAccess.getMainFacplAccess().getGenPackageAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getSemicolonKeyword_6_3()); }

	';' 

{ after(grammarAccess.getMainFacplAccess().getSemicolonKeyword_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MainFacpl__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group_7__0__Impl
	rule__MainFacpl__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getRequestsToEvaluateKeyword_7_0()); }

	'Requests To Evaluate' 

{ after(grammarAccess.getMainFacplAccess().getRequestsToEvaluateKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group_7__1__Impl
	rule__MainFacpl__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getColonKeyword_7_1()); }

	':' 

{ after(grammarAccess.getMainFacplAccess().getColonKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group_7__2__Impl
	rule__MainFacpl__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getGroup_7_2()); }
(rule__MainFacpl__Group_7_2__0)
{ after(grammarAccess.getMainFacplAccess().getGroup_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getSemicolonKeyword_7_3()); }

	';' 

{ after(grammarAccess.getMainFacplAccess().getSemicolonKeyword_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MainFacpl__Group_7_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group_7_2__0__Impl
	rule__MainFacpl__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group_7_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getRefRequestAssignment_7_2_0()); }
(rule__MainFacpl__RefRequestAssignment_7_2_0)
{ after(grammarAccess.getMainFacplAccess().getRefRequestAssignment_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group_7_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group_7_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group_7_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getGroup_7_2_1()); }
(rule__MainFacpl__Group_7_2_1__0)*
{ after(grammarAccess.getMainFacplAccess().getGroup_7_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MainFacpl__Group_7_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group_7_2_1__0__Impl
	rule__MainFacpl__Group_7_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group_7_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getCommaKeyword_7_2_1_0()); }

	',' 

{ after(grammarAccess.getMainFacplAccess().getCommaKeyword_7_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFacpl__Group_7_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFacpl__Group_7_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__Group_7_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getRefRequestAssignment_7_2_1_1()); }
(rule__MainFacpl__RefRequestAssignment_7_2_1_1)
{ after(grammarAccess.getMainFacplAccess().getRefRequestAssignment_7_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__0__Impl
	rule__FunctionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getDecFunKeyword_0()); }

	'dec-fun' 

{ after(grammarAccess.getFunctionDeclarationAccess().getDecFunKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__1__Impl
	rule__FunctionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getTypeAssignment_1()); }
(rule__FunctionDeclaration__TypeAssignment_1)
{ after(grammarAccess.getFunctionDeclarationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__2__Impl
	rule__FunctionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_2()); }
(rule__FunctionDeclaration__NameAssignment_2)
{ after(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__3__Impl
	rule__FunctionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getFunctionDeclarationAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__4__Impl
	rule__FunctionDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getArgsAssignment_4()); }
(rule__FunctionDeclaration__ArgsAssignment_4)
{ after(grammarAccess.getFunctionDeclarationAccess().getArgsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__5__Impl
	rule__FunctionDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getGroup_5()); }
(rule__FunctionDeclaration__Group_5__0)*
{ after(grammarAccess.getFunctionDeclarationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getFunctionDeclarationAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__FunctionDeclaration__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group_5__0__Impl
	rule__FunctionDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getFunctionDeclarationAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getArgsAssignment_5_1()); }
(rule__FunctionDeclaration__ArgsAssignment_5_1)
{ after(grammarAccess.getFunctionDeclarationAccess().getArgsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PAF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PAF__Group__0__Impl
	rule__PAF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PAF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAFAccess().getPepKeyword_0()); }

	'pep:' 

{ after(grammarAccess.getPAFAccess().getPepKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PAF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PAF__Group__1__Impl
	rule__PAF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PAF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAFAccess().getPepAssignment_1()); }
(rule__PAF__PepAssignment_1)
{ after(grammarAccess.getPAFAccess().getPepAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PAF__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PAF__Group__2__Impl
	rule__PAF__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PAF__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAFAccess().getPdpKeyword_2()); }

	'pdp:' 

{ after(grammarAccess.getPAFAccess().getPdpKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PAF__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PAF__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PAF__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAFAccess().getPdpAssignment_3()); }
(rule__PAF__PdpAssignment_3)
{ after(grammarAccess.getPAFAccess().getPdpAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Request__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Request__Group__0__Impl
	rule__Request__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Request__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestAccess().getRequestKeyword_0()); }

	'Request:' 

{ after(grammarAccess.getRequestAccess().getRequestKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Request__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Request__Group__1__Impl
	rule__Request__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Request__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestAccess().getGroup_1()); }
(rule__Request__Group_1__0)?
{ after(grammarAccess.getRequestAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Request__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Request__Group__2__Impl
	rule__Request__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Request__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRequestAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Request__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Request__Group__3__Impl
	rule__Request__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Request__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestAccess().getNameAssignment_3()); }
(rule__Request__NameAssignment_3)
{ after(grammarAccess.getRequestAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Request__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Request__Group__4__Impl
	rule__Request__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Request__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRequestAccess().getAttributesAssignment_4()); }
(rule__Request__AttributesAssignment_4)
{ after(grammarAccess.getRequestAccess().getAttributesAssignment_4()); }
)
(
{ before(grammarAccess.getRequestAccess().getAttributesAssignment_4()); }
(rule__Request__AttributesAssignment_4)*
{ after(grammarAccess.getRequestAccess().getAttributesAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Request__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Request__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Request__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getRequestAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Request__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Request__Group_1__0__Impl
	rule__Request__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Request__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getRequestAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Request__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Request__Group_1__1__Impl
	rule__Request__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Request__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestAccess().getStubAssignment_1_1()); }
(rule__Request__StubAssignment_1_1)
{ after(grammarAccess.getRequestAccess().getStubAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Request__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Request__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Request__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getRequestAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeReq__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeReq__Group__0__Impl
	rule__AttributeReq__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReq__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeReqAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getAttributeReqAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeReq__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeReq__Group__1__Impl
	rule__AttributeReq__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReq__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeReqAccess().getNameAssignment_1()); }
(rule__AttributeReq__NameAssignment_1)
{ after(grammarAccess.getAttributeReqAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeReq__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeReq__Group__2__Impl
	rule__AttributeReq__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReq__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeReqAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getAttributeReqAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeReq__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeReq__Group__3__Impl
	rule__AttributeReq__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReq__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeReqAccess().getValueAssignment_3()); }
(rule__AttributeReq__ValueAssignment_3)
{ after(grammarAccess.getAttributeReqAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeReq__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeReq__Group__4__Impl
	rule__AttributeReq__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReq__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeReqAccess().getGroup_4()); }
(rule__AttributeReq__Group_4__0)*
{ after(grammarAccess.getAttributeReqAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeReq__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeReq__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReq__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeReqAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getAttributeReqAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AttributeReq__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeReq__Group_4__0__Impl
	rule__AttributeReq__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReq__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeReqAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getAttributeReqAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeReq__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeReq__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReq__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeReqAccess().getValueAssignment_4_1()); }
(rule__AttributeReq__ValueAssignment_4_1)
{ after(grammarAccess.getAttributeReqAccess().getValueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group__0__Impl
	rule__AttributeName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getCategoryAssignment_0()); }
(rule__AttributeName__CategoryAssignment_0)
{ after(grammarAccess.getAttributeNameAccess().getCategoryAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group__1__Impl
	rule__AttributeName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getAttributeNameAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getIdAssignment_2()); }
(rule__AttributeName__IdAssignment_2)
{ after(grammarAccess.getAttributeNameAccess().getIdAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__STRING_O__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__STRING_O__Group__0__Impl
	rule__STRING_O__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__STRING_O__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRING_OAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getSTRING_OAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__STRING_O__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__STRING_O__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__STRING_O__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRING_OAccess().getGroup_1()); }
(rule__STRING_O__Group_1__0)*
{ after(grammarAccess.getSTRING_OAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__STRING_O__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__STRING_O__Group_1__0__Impl
	rule__STRING_O__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__STRING_O__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRING_OAccess().getAlternatives_1_0()); }
(rule__STRING_O__Alternatives_1_0)
{ after(grammarAccess.getSTRING_OAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__STRING_O__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__STRING_O__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__STRING_O__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRING_OAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getSTRING_OAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PDP__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PDP__Group__0__Impl
	rule__PDP__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PDP__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPDPAccess().getPdpAlgAssignment_0()); }
(rule__PDP__PdpAlgAssignment_0)
{ after(grammarAccess.getPDPAccess().getPdpAlgAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PDP__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PDP__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PDP__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPDPAccess().getPolSetAssignment_1()); }
(rule__PDP__PolSetAssignment_1)
{ after(grammarAccess.getPDPAccess().getPolSetAssignment_1()); }
)
(
{ before(grammarAccess.getPDPAccess().getPolSetAssignment_1()); }
(rule__PDP__PolSetAssignment_1)*
{ after(grammarAccess.getPDPAccess().getPolSetAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AbstractPolicyIncl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractPolicyIncl__Group_1__0__Impl
	rule__AbstractPolicyIncl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractPolicyIncl__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractPolicyInclAccess().getIncludeKeyword_1_0()); }

	'include' 

{ after(grammarAccess.getAbstractPolicyInclAccess().getIncludeKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractPolicyIncl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractPolicyIncl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractPolicyIncl__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractPolicyInclAccess().getRefPolAssignment_1_1()); }
(rule__AbstractPolicyIncl__RefPolAssignment_1_1)
{ after(grammarAccess.getAbstractPolicyInclAccess().getRefPolAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PolicySet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PolicySet__Group__0__Impl
	rule__PolicySet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getPolicySetKeyword_0()); }

	'PolicySet' 

{ after(grammarAccess.getPolicySetAccess().getPolicySetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PolicySet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PolicySet__Group__1__Impl
	rule__PolicySet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getNameAssignment_1()); }
(rule__PolicySet__NameAssignment_1)
{ after(grammarAccess.getPolicySetAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PolicySet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PolicySet__Group__2__Impl
	rule__PolicySet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPolicySetAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PolicySet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PolicySet__Group__3__Impl
	rule__PolicySet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getPolSetAlgAssignment_3()); }
(rule__PolicySet__PolSetAlgAssignment_3)
{ after(grammarAccess.getPolicySetAccess().getPolSetAlgAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PolicySet__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PolicySet__Group__4__Impl
	rule__PolicySet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getGroup_4()); }
(rule__PolicySet__Group_4__0)?
{ after(grammarAccess.getPolicySetAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PolicySet__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PolicySet__Group__5__Impl
	rule__PolicySet__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getPoliciesKeyword_5()); }

	'policies:' 

{ after(grammarAccess.getPolicySetAccess().getPoliciesKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PolicySet__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PolicySet__Group__6__Impl
	rule__PolicySet__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPolicySetAccess().getPoliciesAssignment_6()); }
(rule__PolicySet__PoliciesAssignment_6)
{ after(grammarAccess.getPolicySetAccess().getPoliciesAssignment_6()); }
)
(
{ before(grammarAccess.getPolicySetAccess().getPoliciesAssignment_6()); }
(rule__PolicySet__PoliciesAssignment_6)*
{ after(grammarAccess.getPolicySetAccess().getPoliciesAssignment_6()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PolicySet__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PolicySet__Group__7__Impl
	rule__PolicySet__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getGroup_7()); }
(rule__PolicySet__Group_7__0)?
{ after(grammarAccess.getPolicySetAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PolicySet__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PolicySet__Group__8__Impl
	rule__PolicySet__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getGroup_8()); }
(rule__PolicySet__Group_8__0)?
{ after(grammarAccess.getPolicySetAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PolicySet__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PolicySet__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getPolicySetAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__PolicySet__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PolicySet__Group_4__0__Impl
	rule__PolicySet__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getTargetKeyword_4_0()); }

	'target:' 

{ after(grammarAccess.getPolicySetAccess().getTargetKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PolicySet__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PolicySet__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getTargetAssignment_4_1()); }
(rule__PolicySet__TargetAssignment_4_1)
{ after(grammarAccess.getPolicySetAccess().getTargetAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PolicySet__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PolicySet__Group_7__0__Impl
	rule__PolicySet__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getOblPKeyword_7_0()); }

	'obl-p:' 

{ after(grammarAccess.getPolicySetAccess().getOblPKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PolicySet__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PolicySet__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getOblpAssignment_7_1()); }
(rule__PolicySet__OblpAssignment_7_1)*
{ after(grammarAccess.getPolicySetAccess().getOblpAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PolicySet__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PolicySet__Group_8__0__Impl
	rule__PolicySet__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getOblDKeyword_8_0()); }

	'obl-d:' 

{ after(grammarAccess.getPolicySetAccess().getOblDKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PolicySet__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PolicySet__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getObldAssignment_8_1()); }
(rule__PolicySet__ObldAssignment_8_1)*
{ after(grammarAccess.getPolicySetAccess().getObldAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Alg__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alg__Group__0__Impl
	rule__Alg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alg__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgAccess().getIdAlgAssignment_0()); }
(rule__Alg__IdAlgAssignment_0)
{ after(grammarAccess.getAlgAccess().getIdAlgAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Alg__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alg__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alg__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgAccess().getGroup_1()); }
(rule__Alg__Group_1__0)?
{ after(grammarAccess.getAlgAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Alg__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alg__Group_1__0__Impl
	rule__Alg__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alg__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgAccess().getHyphenMinusKeyword_1_0()); }

	'-' 

{ after(grammarAccess.getAlgAccess().getHyphenMinusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Alg__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alg__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alg__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgAccess().getFStrategyAssignment_1_1()); }
(rule__Alg__FStrategyAssignment_1_1)
{ after(grammarAccess.getAlgAccess().getFStrategyAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Rule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getRuleKeyword_0()); }

	'Rule' 

{ after(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getNameAssignment_1()); }
(rule__Rule__NameAssignment_1)
{ after(grammarAccess.getRuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getRuleAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getEffectAssignment_3()); }
(rule__Rule__EffectAssignment_3)
{ after(grammarAccess.getRuleAccess().getEffectAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__4__Impl
	rule__Rule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getGroup_4()); }
(rule__Rule__Group_4__0)?
{ after(grammarAccess.getRuleAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__5__Impl
	rule__Rule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getGroup_5()); }
(rule__Rule__Group_5__0)?
{ after(grammarAccess.getRuleAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getRuleAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Rule__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_4__0__Impl
	rule__Rule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getTargetKeyword_4_0()); }

	'target:' 

{ after(grammarAccess.getRuleAccess().getTargetKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getTargetAssignment_4_1()); }
(rule__Rule__TargetAssignment_4_1)
{ after(grammarAccess.getRuleAccess().getTargetAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Rule__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_5__0__Impl
	rule__Rule__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getOblKeyword_5_0()); }

	'obl:' 

{ after(grammarAccess.getRuleAccess().getOblKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getOblAssignment_5_1()); }
(rule__Rule__OblAssignment_5_1)*
{ after(grammarAccess.getRuleAccess().getOblAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Obligation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Obligation__Group__0__Impl
	rule__Obligation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObligationAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getObligationAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Obligation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Obligation__Group__1__Impl
	rule__Obligation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObligationAccess().getTypeOblAssignment_1()); }
(rule__Obligation__TypeOblAssignment_1)
{ after(grammarAccess.getObligationAccess().getTypeOblAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Obligation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Obligation__Group__2__Impl
	rule__Obligation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObligationAccess().getPepActionAssignment_2()); }
(rule__Obligation__PepActionAssignment_2)
{ after(grammarAccess.getObligationAccess().getPepActionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Obligation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Obligation__Group__3__Impl
	rule__Obligation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObligationAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getObligationAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Obligation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Obligation__Group__4__Impl
	rule__Obligation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObligationAccess().getGroup_4()); }
(rule__Obligation__Group_4__0)*
{ after(grammarAccess.getObligationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Obligation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Obligation__Group__5__Impl
	rule__Obligation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObligationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getObligationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Obligation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Obligation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObligationAccess().getRightSquareBracketKeyword_6()); }

	']' 

{ after(grammarAccess.getObligationAccess().getRightSquareBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Obligation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Obligation__Group_4__0__Impl
	rule__Obligation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObligationAccess().getExprAssignment_4_0()); }
(rule__Obligation__ExprAssignment_4_0)
{ after(grammarAccess.getObligationAccess().getExprAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Obligation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Obligation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObligationAccess().getGroup_4_1()); }
(rule__Obligation__Group_4_1__0)*
{ after(grammarAccess.getObligationAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Obligation__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Obligation__Group_4_1__0__Impl
	rule__Obligation__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObligationAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getObligationAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Obligation__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Obligation__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObligationAccess().getExprAssignment_4_1_1()); }
(rule__Obligation__ExprAssignment_4_1_1)
{ after(grammarAccess.getObligationAccess().getExprAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOrExpressionParserRuleCall_0()); }
	ruleOrExpression
{ after(grammarAccess.getAndExpressionAccess().getOrExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1()); }

	'&&' 

{ after(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
(rule__AndExpression__RightAssignment_1_2)
{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getBasicExpressionParserRuleCall_0()); }
	ruleBasicExpression
{ after(grammarAccess.getOrExpressionAccess().getBasicExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
(rule__OrExpression__Group_1__0)*
{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1()); }

	'||' 

{ after(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
(rule__OrExpression__RightAssignment_1_2)
{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BasicExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicExpression__Group_2__0__Impl
	rule__BasicExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicExpressionAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getBasicExpressionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicExpression__Group_2__1__Impl
	rule__BasicExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicExpressionAccess().getExpressionParserRuleCall_2_1()); }
	ruleExpression
{ after(grammarAccess.getBasicExpressionAccess().getExpressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicExpressionAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getBasicExpressionAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NotExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group__0__Impl
	rule__NotExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getExclamationMarkKeyword_0()); }

	'!' 

{ after(grammarAccess.getNotExpressionAccess().getExclamationMarkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getArgAssignment_1()); }
(rule__NotExpression__ArgAssignment_1)
{ after(grammarAccess.getNotExpressionAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunctionIdAssignment_0()); }
(rule__Function__FunctionIdAssignment_0)
{ after(grammarAccess.getFunctionAccess().getFunctionIdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getArg1Assignment_2()); }
(rule__Function__Arg1Assignment_2)
{ after(grammarAccess.getFunctionAccess().getArg1Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getFunctionAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getArg2Assignment_4()); }
(rule__Function__Arg2Assignment_4)
{ after(grammarAccess.getFunctionAccess().getArg2Assignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DeclaredFunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredFunction__Group__0__Impl
	rule__DeclaredFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredFunction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredFunctionAccess().getFunctionIdAssignment_0()); }
(rule__DeclaredFunction__FunctionIdAssignment_0)
{ after(grammarAccess.getDeclaredFunctionAccess().getFunctionIdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaredFunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredFunction__Group__1__Impl
	rule__DeclaredFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredFunction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredFunctionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getDeclaredFunctionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaredFunction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredFunction__Group__2__Impl
	rule__DeclaredFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredFunction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredFunctionAccess().getArgsAssignment_2()); }
(rule__DeclaredFunction__ArgsAssignment_2)
{ after(grammarAccess.getDeclaredFunctionAccess().getArgsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaredFunction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredFunction__Group__3__Impl
	rule__DeclaredFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredFunction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredFunctionAccess().getGroup_3()); }
(rule__DeclaredFunction__Group_3__0)*
{ after(grammarAccess.getDeclaredFunctionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaredFunction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredFunction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredFunction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredFunctionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getDeclaredFunctionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DeclaredFunction__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredFunction__Group_3__0__Impl
	rule__DeclaredFunction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredFunction__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredFunctionAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getDeclaredFunctionAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaredFunction__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredFunction__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredFunction__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredFunctionAccess().getArgsAssignment_3_1()); }
(rule__DeclaredFunction__ArgsAssignment_3_1)
{ after(grammarAccess.getDeclaredFunctionAccess().getArgsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Set__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group__0__Impl
	rule__Set__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getSetKeyword_0()); }

	'set(' 

{ after(grammarAccess.getSetAccess().getSetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group__1__Impl
	rule__Set__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getGroup_1()); }
(rule__Set__Group_1__0)
{ after(grammarAccess.getSetAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getSetAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Set__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group_1__0__Impl
	rule__Set__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getArgsAssignment_1_0()); }
(rule__Set__ArgsAssignment_1_0)
{ after(grammarAccess.getSetAccess().getArgsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getGroup_1_1()); }
(rule__Set__Group_1_1__0)*
{ after(grammarAccess.getSetAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Set__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group_1_1__0__Impl
	rule__Set__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getSetAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getArgsAssignment_1_1_1()); }
(rule__Set__ArgsAssignment_1_1_1)
{ after(grammarAccess.getSetAccess().getArgsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Facpl__UnorderedGroup
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getFacplAccess().getUnorderedGroup());
    }
:
	rule__Facpl__UnorderedGroup__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getFacplAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}


rule__Facpl__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFacplAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFacplAccess().getUnorderedGroup(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					(
						{ before(grammarAccess.getFacplAccess().getImportElAssignment_0()); }
						(rule__Facpl__ImportElAssignment_0)
						{ after(grammarAccess.getFacplAccess().getImportElAssignment_0()); }
					)
					(
						{ before(grammarAccess.getFacplAccess().getImportElAssignment_0()); }
						((rule__Facpl__ImportElAssignment_0)=>rule__Facpl__ImportElAssignment_0)*
						{ after(grammarAccess.getFacplAccess().getImportElAssignment_0()); }
					)					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFacplAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFacplAccess().getUnorderedGroup(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					(
						{ before(grammarAccess.getFacplAccess().getDeclarationsAssignment_1()); }
						(rule__Facpl__DeclarationsAssignment_1)
						{ after(grammarAccess.getFacplAccess().getDeclarationsAssignment_1()); }
					)
					(
						{ before(grammarAccess.getFacplAccess().getDeclarationsAssignment_1()); }
						((rule__Facpl__DeclarationsAssignment_1)=>rule__Facpl__DeclarationsAssignment_1)*
						{ after(grammarAccess.getFacplAccess().getDeclarationsAssignment_1()); }
					)					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFacplAccess().getUnorderedGroup(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFacplAccess().getUnorderedGroup(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					(
						{ before(grammarAccess.getFacplAccess().getPoliciesAssignment_2()); }
						(rule__Facpl__PoliciesAssignment_2)
						{ after(grammarAccess.getFacplAccess().getPoliciesAssignment_2()); }
					)
					(
						{ before(grammarAccess.getFacplAccess().getPoliciesAssignment_2()); }
						((rule__Facpl__PoliciesAssignment_2)=>rule__Facpl__PoliciesAssignment_2)*
						{ after(grammarAccess.getFacplAccess().getPoliciesAssignment_2()); }
					)					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFacplAccess().getUnorderedGroup(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFacplAccess().getUnorderedGroup(), 3);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					(
						{ before(grammarAccess.getFacplAccess().getRequestsAssignment_3()); }
						(rule__Facpl__RequestsAssignment_3)
						{ after(grammarAccess.getFacplAccess().getRequestsAssignment_3()); }
					)
					(
						{ before(grammarAccess.getFacplAccess().getRequestsAssignment_3()); }
						((rule__Facpl__RequestsAssignment_3)=>rule__Facpl__RequestsAssignment_3)*
						{ after(grammarAccess.getFacplAccess().getRequestsAssignment_3()); }
					)					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFacplAccess().getUnorderedGroup(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFacplAccess().getUnorderedGroup(), 4);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getFacplAccess().getMainAssignment_4()); }
						(rule__Facpl__MainAssignment_4)
						{ after(grammarAccess.getFacplAccess().getMainAssignment_4()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFacplAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}


rule__Facpl__UnorderedGroup__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facpl__UnorderedGroup__Impl
	rule__Facpl__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Facpl__UnorderedGroup__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facpl__UnorderedGroup__Impl
	rule__Facpl__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Facpl__UnorderedGroup__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facpl__UnorderedGroup__Impl
	rule__Facpl__UnorderedGroup__3?
;
finally {
	restoreStackSize(stackSize);
}


rule__Facpl__UnorderedGroup__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facpl__UnorderedGroup__Impl
	rule__Facpl__UnorderedGroup__4?
;
finally {
	restoreStackSize(stackSize);
}


rule__Facpl__UnorderedGroup__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facpl__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}












rule__Facpl__ImportElAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacplAccess().getImportElImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getFacplAccess().getImportElImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facpl__DeclarationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacplAccess().getDeclarationsFunctionDeclarationParserRuleCall_1_0()); }
	ruleFunctionDeclaration{ after(grammarAccess.getFacplAccess().getDeclarationsFunctionDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facpl__PoliciesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacplAccess().getPoliciesPolicySetParserRuleCall_2_0()); }
	rulePolicySet{ after(grammarAccess.getFacplAccess().getPoliciesPolicySetParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facpl__RequestsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacplAccess().getRequestsRequestParserRuleCall_3_0()); }
	ruleRequest{ after(grammarAccess.getFacplAccess().getRequestsRequestParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facpl__MainAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacplAccess().getMainMainFacplParserRuleCall_4_0()); }
	ruleMainFacpl{ after(grammarAccess.getFacplAccess().getMainMainFacplParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__ExtIndetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getExtIndetBooleanLiteralParserRuleCall_4_0()); }
	ruleBooleanLiteral{ after(grammarAccess.getMainFacplAccess().getExtIndetBooleanLiteralParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__GenPackageAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getGenPackageSTRINGTerminalRuleCall_6_2_0()); }
	RULE_STRING{ after(grammarAccess.getMainFacplAccess().getGenPackageSTRINGTerminalRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__RefRequestAssignment_7_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getRefRequestRequestCrossReference_7_2_0_0()); }
(
{ before(grammarAccess.getMainFacplAccess().getRefRequestRequestIDTerminalRuleCall_7_2_0_0_1()); }
	RULE_ID{ after(grammarAccess.getMainFacplAccess().getRefRequestRequestIDTerminalRuleCall_7_2_0_0_1()); }
)
{ after(grammarAccess.getMainFacplAccess().getRefRequestRequestCrossReference_7_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__RefRequestAssignment_7_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getRefRequestRequestCrossReference_7_2_1_1_0()); }
(
{ before(grammarAccess.getMainFacplAccess().getRefRequestRequestIDTerminalRuleCall_7_2_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getMainFacplAccess().getRefRequestRequestIDTerminalRuleCall_7_2_1_1_0_1()); }
)
{ after(grammarAccess.getMainFacplAccess().getRefRequestRequestCrossReference_7_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainFacpl__PafAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFacplAccess().getPafPAFParserRuleCall_8_0()); }
	rulePAF{ after(grammarAccess.getMainFacplAccess().getPafPAFParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getTypeTypeLiteralEnumRuleCall_1_0()); }
	ruleTypeLiteral{ after(grammarAccess.getFunctionDeclarationAccess().getTypeTypeLiteralEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getFunctionDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__ArgsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getArgsTypeLiteralEnumRuleCall_4_0()); }
	ruleTypeLiteral{ after(grammarAccess.getFunctionDeclarationAccess().getArgsTypeLiteralEnumRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__ArgsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getArgsTypeLiteralEnumRuleCall_5_1_0()); }
	ruleTypeLiteral{ after(grammarAccess.getFunctionDeclarationAccess().getArgsTypeLiteralEnumRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PAF__PepAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAFAccess().getPepPEPAlgEnumRuleCall_1_0()); }
	rulePEPAlg{ after(grammarAccess.getPAFAccess().getPepPEPAlgEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PAF__PdpAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAFAccess().getPdpPDPParserRuleCall_3_0()); }
	rulePDP{ after(grammarAccess.getPAFAccess().getPdpPDPParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Request__StubAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestAccess().getStubSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getRequestAccess().getStubSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Request__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getRequestAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Request__AttributesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestAccess().getAttributesAttributeReqParserRuleCall_4_0()); }
	ruleAttributeReq{ after(grammarAccess.getRequestAccess().getAttributesAttributeReqParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReq__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeReqAccess().getNameAttributeNameParserRuleCall_1_0()); }
	ruleAttributeName{ after(grammarAccess.getAttributeReqAccess().getNameAttributeNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReq__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeReqAccess().getValueLiteralsParserRuleCall_3_0()); }
	ruleLiterals{ after(grammarAccess.getAttributeReqAccess().getValueLiteralsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeReq__ValueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeReqAccess().getValueLiteralsParserRuleCall_4_1_0()); }
	ruleLiterals{ after(grammarAccess.getAttributeReqAccess().getValueLiteralsParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__CategoryAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getCategorySTRING_OParserRuleCall_0_0()); }
	ruleSTRING_O{ after(grammarAccess.getAttributeNameAccess().getCategorySTRING_OParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__IdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getIdSTRING_OParserRuleCall_2_0()); }
	ruleSTRING_O{ after(grammarAccess.getAttributeNameAccess().getIdSTRING_OParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PDP__PdpAlgAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPDPAccess().getPdpAlgAlgParserRuleCall_0_0()); }
	ruleAlg{ after(grammarAccess.getPDPAccess().getPdpAlgAlgParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PDP__PolSetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPDPAccess().getPolSetAbstractPolicyInclParserRuleCall_1_0()); }
	ruleAbstractPolicyIncl{ after(grammarAccess.getPDPAccess().getPolSetAbstractPolicyInclParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractPolicyIncl__NewPolicyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractPolicyInclAccess().getNewPolicyFacplPolicyParserRuleCall_0_0()); }
	ruleFacplPolicy{ after(grammarAccess.getAbstractPolicyInclAccess().getNewPolicyFacplPolicyParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractPolicyIncl__RefPolAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractPolicyInclAccess().getRefPolPolicySetCrossReference_1_1_0()); }
(
{ before(grammarAccess.getAbstractPolicyInclAccess().getRefPolPolicySetIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAbstractPolicyInclAccess().getRefPolPolicySetIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getAbstractPolicyInclAccess().getRefPolPolicySetCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPolicySetAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__PolSetAlgAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getPolSetAlgAlgParserRuleCall_3_0()); }
	ruleAlg{ after(grammarAccess.getPolicySetAccess().getPolSetAlgAlgParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__TargetAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getTargetExpressionParserRuleCall_4_1_0()); }
	ruleExpression{ after(grammarAccess.getPolicySetAccess().getTargetExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__PoliciesAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getPoliciesAbstractPolicyInclParserRuleCall_6_0()); }
	ruleAbstractPolicyIncl{ after(grammarAccess.getPolicySetAccess().getPoliciesAbstractPolicyInclParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__OblpAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getOblpObligationParserRuleCall_7_1_0()); }
	ruleObligation{ after(grammarAccess.getPolicySetAccess().getOblpObligationParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PolicySet__ObldAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicySetAccess().getObldObligationParserRuleCall_8_1_0()); }
	ruleObligation{ after(grammarAccess.getPolicySetAccess().getObldObligationParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Alg__IdAlgAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgAccess().getIdAlgAlgLiteralEnumRuleCall_0_0()); }
	ruleAlgLiteral{ after(grammarAccess.getAlgAccess().getIdAlgAlgLiteralEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Alg__FStrategyAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgAccess().getFStrategyFulfillmentStrategyEnumRuleCall_1_1_0()); }
	ruleFulfillmentStrategy{ after(grammarAccess.getAlgAccess().getFStrategyFulfillmentStrategyEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__EffectAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getEffectEffectEnumRuleCall_3_0()); }
	ruleEffect{ after(grammarAccess.getRuleAccess().getEffectEffectEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__TargetAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getTargetExpressionParserRuleCall_4_1_0()); }
	ruleExpression{ after(grammarAccess.getRuleAccess().getTargetExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__OblAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getOblObligationParserRuleCall_5_1_0()); }
	ruleObligation{ after(grammarAccess.getRuleAccess().getOblObligationParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__TypeOblAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObligationAccess().getTypeOblAlternatives_1_0()); }
(rule__Obligation__TypeOblAlternatives_1_0)
{ after(grammarAccess.getObligationAccess().getTypeOblAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__PepActionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObligationAccess().getPepActionIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getObligationAccess().getPepActionIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__ExprAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObligationAccess().getExprExpressionParserRuleCall_4_0_0()); }
	ruleExpression{ after(grammarAccess.getObligationAccess().getExprExpressionParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__ExprAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObligationAccess().getExprExpressionParserRuleCall_4_1_1_0()); }
	ruleExpression{ after(grammarAccess.getObligationAccess().getExprExpressionParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightOrExpressionParserRuleCall_1_2_0()); }
	ruleOrExpression{ after(grammarAccess.getAndExpressionAccess().getRightOrExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightBasicExpressionParserRuleCall_1_2_0()); }
	ruleBasicExpression{ after(grammarAccess.getOrExpressionAccess().getRightBasicExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getArgBasicExpressionParserRuleCall_1_0()); }
	ruleBasicExpression{ after(grammarAccess.getNotExpressionAccess().getArgBasicExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__FunctionIdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunctionIdFunIDEnumRuleCall_0_0()); }
	rulefunID{ after(grammarAccess.getFunctionAccess().getFunctionIdFunIDEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Arg1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getArg1ExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getFunctionAccess().getArg1ExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Arg2Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getArg2ExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getFunctionAccess().getArg2ExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredFunction__FunctionIdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredFunctionAccess().getFunctionIdFunctionDeclarationCrossReference_0_0()); }
(
{ before(grammarAccess.getDeclaredFunctionAccess().getFunctionIdFunctionDeclarationIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getDeclaredFunctionAccess().getFunctionIdFunctionDeclarationIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getDeclaredFunctionAccess().getFunctionIdFunctionDeclarationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredFunction__ArgsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredFunctionAccess().getArgsExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getDeclaredFunctionAccess().getArgsExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredFunction__ArgsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredFunctionAccess().getArgsExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getDeclaredFunctionAccess().getArgsExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Set__ArgsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getArgsLiteralsParserRuleCall_1_0_0()); }
	ruleLiterals{ after(grammarAccess.getSetAccess().getArgsLiteralsParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Set__ArgsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getArgsLiteralsParserRuleCall_1_1_1_0()); }
	ruleLiterals{ after(grammarAccess.getSetAccess().getArgsLiteralsParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueBOOLEANTerminalRuleCall_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getBooleanLiteralAccess().getValueBOOLEANTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleLiteralAccess().getValueREALTerminalRuleCall_0()); }
	RULE_REAL{ after(grammarAccess.getDoubleLiteralAccess().getValueREALTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateLiteralAccess().getValueDATETerminalRuleCall_0()); }
	RULE_DATE{ after(grammarAccess.getDateLiteralAccess().getValueDATETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getValueTIMETerminalRuleCall_0()); }
	RULE_TIME{ after(grammarAccess.getTimeLiteralAccess().getValueTIMETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_BOOLEAN : ('true'|'false');

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_DATE : RULE_INT '/' RULE_INT '/' RULE_INT;

RULE_TIME : RULE_INT ':' RULE_INT ':' RULE_INT;

RULE_REAL : ('+'|'-')? ('0'..'9')* ('.' ('0'..'9')+)?;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"'|'/')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\''|'/')))* '\'');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


